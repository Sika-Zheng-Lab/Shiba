{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shiba","text":"<p>A versatile computational method for systematic identification of differential RNA splicing. Shiba/scShiba can quantify and identify differential splicing events from bulk RNA-seq data and single-cell RNA-seq data. Shiba and scShiba are also implemented as Snakemake workflows, SnakeShiba and SnakeScShiba, respectively.</p> <p>See CHANGELOG.md for the latest updates.</p> <p>Report a bug</p> <p>If you continue to encounter issues, please don't hesitate to open an issue on GitHub. The community and developers are here to help!</p>"},{"location":"#contents","title":"Contents","text":"<ul> <li>Installation</li> <li>Quick Start<ul> <li>With bulk RNA-seq data</li> <li>With single-cell RNA-seq data</li> </ul> </li> <li>Output<ul> <li>Shiba/SnakeShiba</li> <li>scShiba/SnakeScShiba</li> </ul> </li> <li>Usage<ul> <li>shiba.py</li> <li>snakeshiba.smk</li> <li>scshiba.py</li> <li>snakescshiba.smk</li> </ul> </li> </ul>"},{"location":"#citation","title":"Citation","text":"<p>Kubota N, Chen L, Zheng S. Shiba: a versatile computational method for systematic identification of differential RNA splicing across platforms. Nucleic Acids Research  53(4), 2025, gkaf098.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#conda","title":"Conda","text":"<p>The following command will create a conda environment named <code>shiba</code> with all dependencies installed.</p> <pre><code>conda create -n shiba -c conda-forge -c bioconda shiba\nconda activate shiba # Activate the conda environment\npip install styleframe==4.1 # optional, for generating outputs in Excel format.\n</code></pre> <p>You can also install minimal dependencies for MameShiba, a lightweight version of Shiba . If you want to perform only splicing analysis, this could be a good option. The following command will create a conda environment named <code>mameshiba</code> with minimal dependencies installed.</p> <pre><code>conda create -n mameshiba -c conda-forge -c bioconda mameshiba\n</code></pre>"},{"location":"installation/#docker","title":"Docker","text":"<p>We provide a Docker image for Shiba. You can use the following command to pull the latest image from Docker Hub:</p> <pre><code># Pull the latest image\ndocker pull naotokubota/shiba:v0.6.3\n\n# Login to the container\ndocker run -it --rm naotokubota/shiba:v0.6.3 bash\n\n# Run Shiba, for example, to see the help message\ndocker run -it --rm naotokubota/shiba:v0.6.3 shiba.py -h\n</code></pre> <p>Memory allocation</p> <p>You may need to allocate more memory to the container if you are using a large dataset. You can do this in the Docker Desktop settings:</p> <ul> <li>Go to Docker Desktop settings</li> <li>Click on the \"Resources\" tab</li> <li>Increase the memory limit as needed</li> <li>Click \"Apply &amp; Restart\" to save the changes</li> </ul> <p></p>"},{"location":"installation/#snakemake","title":"Snakemake","text":"<p>You need to install Snakemake and clone the Shiba GitHub repository on your system:</p> <pre><code># Clone the Shiba repository\ngit clone https://github.com/Sika-Zheng-Lab/Shiba.git\n</code></pre> <p>And please make sure you have Singularity installed on your system as the snakemake workflow uses Singularity to run each step of the pipeline.</p>"},{"location":"output/scshiba/","title":"Output files of scShiba/SnakeScShiba","text":"<p>The output directory of scShiba contains the following sub directories:</p> <ul> <li><code>events</code>: Text files of alternative splicing events. Note that the events are limited to annotated ones.</li> <li><code>junctions</code>: Junction read counts.</li> <li><code>results</code>: Results of differential splicing analysis.</li> </ul> <p>The following sub directories are added for when SnakeScShiba is used:</p> <ul> <li><code>benchmark</code>: Benchmarking results.</li> <li><code>log</code>: Log files of each step.</li> </ul> <p>Please refer to the Shiba/SnakeShiba documentation for more details.</p>"},{"location":"output/shiba/","title":"Output files of Shiba/SnakeShiba","text":"<p>The output directory of Shiba contains the following sub directories:</p> <ul> <li><code>annotation</code>: Assembled GTF file.</li> <li><code>events</code>: Text files of alternative splicing events.</li> <li><code>junctions</code>: Junction read counts.</li> <li><code>results</code>: Results of differential expression and splicing analysis.</li> <li><code>plots</code>: Plots of alternative splicing events.</li> </ul> <p>The following sub directories are added when SnakeShiba is used:</p> <ul> <li><code>benchmark</code>: Benchmarking results.</li> <li><code>log</code>: Log files of each step.</li> </ul>"},{"location":"output/shiba/#files-in-resultssplicing","title":"Files in <code>results/splicing</code>","text":"<ul> <li><code>PSI_[SE,FIVE,THREE,MXE,RI,MSE,AFE,ALE].txt</code>: Results of differential splicing analysis.</li> <li><code>PSI_matrix_[sample,group].txt</code>: PSI values of each event for all samples or groups. Blank cells indicate that the event did not pass the minimum read count threshold.</li> <li><code>summary.txt</code>: Numbers of the differentially spliced events for each splicing and event type.</li> </ul>"},{"location":"output/shiba/#column-description-of-psi_txt","title":"Column description of PSI_*.txt","text":"<ul> <li>event_id: ID of the event.</li> <li>pos_id: Positional ID of the event. This is useful for comparing the same event across different Shiba runs.</li> <li>strand: Strand of the event (+ or -).</li> <li>gene_id: Gene ID.</li> <li>gene_name: Gene name.</li> <li>label: Label of the event type (annotated or unannotated). annotated means that the event is documented in the reference annotation file, while unannotated means that the event is NOT documented in the reference annotation file (i.e. novel or cryptic splicing event).</li> <li>ref_PSI: PSI of the reference group.</li> <li>alt_PSI: PSI of the alternative group.</li> <li>dPSI: Delta PSI (alt_PSI - ref_PSI).</li> <li>q: P-value of Fisher's exact test adjusted by the Benjamini-Hochberg method.</li> <li>Diff events: Flag of if the event is differentially spliced between the reference and alternative groups (Yes or No).</li> </ul>"},{"location":"output/shiba/#psi_setxt","title":"<code>PSI_SE.txt</code>","text":"Skipped exon <ul> <li>exon: Genomic coordinates of the skipped exon.</li> <li>intron_a: Genomic coordinates of the left-side inclusive intron of the skipped exon.</li> <li>intron_b: Genomic coordinates of the right-side inclusive intron of the skipped exon.</li> <li>intron_c: Genomic coordinates of the exclusive intron of the skipped exon.</li> <li>ref_junction_a: Junction read counts of the left-side inclusive intron of the skipped exon in the reference group.</li> <li>ref_junction_b: Junction read counts of the right-side inclusive intron of the skipped exon in the reference group.</li> <li>ref_junction_c: Junction read counts of the exclusive intron of the skipped exon in the reference group.</li> <li>alt_junction_a: Junction read counts of the left-side inclusive intron of the skipped exon in the alternative group.</li> <li>alt_junction_b: Junction read counts of the right-side inclusive intron of the skipped exon in the alternative group.</li> <li>alt_junction_c: Junction read counts of the exclusive intron of the skipped exon in the alternative group.</li> <li>OR_junction_a: Odds ratio comparing junction read counts of the left-side inclusive intron to those of the exclusive intron, reference group against alternative group.</li> <li>p_junction_a: P-value of Fisher's exact test for the junction read counts of the left-side inclusive intron to those of the exclusive intron, reference group against alternative group.</li> <li>OR_junction_b: Odds ratio comparing junction read counts of the right-side inclusive intron to those of the exclusive intron, reference group against alternative group.</li> <li>p_junction_b: P-value of Fisher's exact test for the junction read counts of the right-side inclusive intron to those of the exclusive intron, reference group against alternative group.</li> <li>p_maximum: Greater of the two P-values of Fisher's exact tests.</li> </ul>"},{"location":"output/shiba/#psi_fivetxt-and-psi_threetxt","title":"<code>PSI_FIVE.txt</code> and <code>PSI_THREE.txt</code>","text":"Alternative 5' and 3' splice sites <ul> <li>exon_a: Genomic coordinates of the longer exon using more internal splice site.</li> <li>exon_b: Genomic coordinates of the shorter exon using less internal splice site.</li> <li>intron_a: Genomic coordinates of the intron associated with the longer exon.</li> <li>intron_b: Genomic coordinates of the intron associated with the shorter exon.</li> <li>ref_junction_a: Junction read counts of the intron associated with the longer exon in the reference group.</li> <li>ref_junction_b: Junction read counts of the intron associated with the shorter exon in the reference group.</li> <li>alt_junction_a: Junction read counts of the intron associated with the longer exon in the alternative group.</li> <li>alt_junction_b: Junction read counts of the intron associated with the shorter exon in the alternative group.</li> <li>OR: Odds ratio comparing junction read counts of the intron associated with the longer exon to those of the intron associated with the shorter exon, reference group against alternative group.</li> <li>p: P-value of Fisher's exact test for the junction read counts of the intron associated with the longer exon to those of the intron associated with the shorter exon, reference group against alternative group.</li> </ul>"},{"location":"output/shiba/#psi_mxetxt","title":"<code>PSI_MXE.txt</code>","text":"Mutually exclusive exons <ul> <li>exon_a: Genomic coordinates of the left-side mutually exclusive exon.</li> <li>exon_b: Genomic coordinates of the right-side mutually exclusive exon.</li> <li>intron_a1: Genomic coordinates of the left-side inclusive intron of the left-side mutually exclusive exon.</li> <li>intron_a2: Genomic coordinates of the right-side inclusive intron of the left-side mutually exclusive exon.</li> <li>intron_b1: Genomic coordinates of the left-side inclusive intron of the right-side mutually exclusive exon.</li> <li>intron_b2: Genomic coordinates of the right-side inclusive intron of the right-side mutually exclusive exon.</li> <li>ref_junction_a1: Junction read counts of the left-side inclusive intron of the left-side mutually exclusive exon in the reference group.</li> <li>ref_junction_a2: Junction read counts of the right-side inclusive intron of the left-side mutually exclusive exon in the reference group.</li> <li>ref_junction_b1: Junction read counts of the left-side inclusive intron of the right-side mutually exclusive exon in the reference group.</li> <li>ref_junction_b2: Junction read counts of the right-side inclusive intron of the right-side mutually exclusive exon in the reference group.</li> <li>alt_junction_a1: Junction read counts of the left-side inclusive intron of the left-side mutually exclusive exon in the alternative group.</li> <li>alt_junction_a2: Junction read counts of the right-side inclusive intron of the left-side mutually exclusive exon in the alternative group.</li> <li>alt_junction_b1: Junction read counts of the left-side inclusive intron of the right-side mutually exclusive exon in the alternative group.</li> <li>alt_junction_b2: Junction read counts of the right-side inclusive intron of the right-side mutually exclusive exon in the alternative group.</li> <li>OR_a1b1: Odds ratio comparing junction read counts of the left-side inclusive intron of the left-side mutually exclusive exon to those of the left-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>p_a1b1: P-value of Fisher's exact test for the junction read counts of the left-side inclusive intron of the left-side mutually exclusive exon to those of the left-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>OR_a1b2: Odds ratio comparing junction read counts of the left-side inclusive intron of the left-side mutually exclusive exon to those of the right-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>p_a1b2: Odds ratio comparing junction read counts of the left-side inclusive intron of the left-side mutually exclusive exon to those of the right-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>OR_a2b1: Odds ratio comparing junction read counts of the right-side inclusive intron of the left-side mutually exclusive exon to those of the left-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>p_a2b1: Odds ratio comparing junction read counts of the right-side inclusive intron of the left-side mutually exclusive exon to those of the left-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>OR_a2b2: Odds ratio comparing junction read counts of the right-side inclusive intron of the left-side mutually exclusive exon to those of the right-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>p_a2b2: Odds ratio comparing junction read counts of the right-side inclusive intron of the left-side mutually exclusive exon to those of the right-side inclusive intron of the right-side mutually exclusive exon, reference group against alternative group.</li> <li>p_maximum: Greater of the four P-values of Fisher's exact tests.</li> </ul>"},{"location":"output/shiba/#psi_ritxt","title":"<code>PSI_RI.txt</code>","text":"Reteined intron <ul> <li>exon_a: Genomic coordinates of the left-side exon.</li> <li>exon_b: Genomic coordinates of the right-side exon.</li> <li>exon_c: Genomic coordinates of the exon containing the retained intron.</li> <li>intron_a: Genomic coordinates of the retained intron.</li> <li>ref_junction_a: Junction read counts of the intron in the reference group.</li> <li>ref_junction_a_start: The left-side exon-intron junction read counts of the retained intron in the reference group.</li> <li>ref_junction_a_end: The right-side exon-intron junction read counts of the retained intron in the reference group.</li> <li>alt_junction_a: : Junction read counts of the intron in the alternative group.</li> <li>alt_junction_a_start: The left-side exon-intron junction read counts of the retained intron in the alternative group.</li> <li>alt_junction_a_end: The right-side exon-intron junction read counts of the retained intron in the alternative group.</li> <li>OR_junction_a_start: Odds ratio comparing the left-side exon-intron junction read counts to the intron junction read counts, reference group against alternative group.</li> <li>p_junction_a_start: P-value of Fisher's exact test for the left-side exon-intron junction read counts to the intron junction read counts, reference group against alternative group.</li> <li>OR_junction_a_end: Odds ratio comparing the right-side exon-intron junction read counts to the intron junction read counts, reference group against alternative group.</li> <li>p_junction_a_end: P-value of Fisher's exact test for the right-side exon-intron junction read counts to the intron junction read counts, reference group against alternative group.</li> <li>p_maximum: Greater of the two P-values of Fisher's exact tests.</li> </ul>"},{"location":"output/shiba/#psi_msetxt","title":"<code>PSI_MSE.txt</code>","text":"Multiple skipped exons <ul> <li>mse_n: Number of skipped exons.</li> <li>exon: Genomic coordinates of the skipped exons, separated by semi-colons from the left to the right (e.g., <code>chr1:75790152-75790274;chr1:75790446-75790517</code>).</li> <li>intron: Genomic coordinates of the associated introns of the skipped exons, separated by semi-colons from the left to the right and the last one is the exclusive intron (e.g., <code>chr1:75790057-75790152;chr1:75790274-75790446;chr1:75790517-75791285;chr1:75790057-75791285</code>).</li> <li>ref_junction: Junction read counts of the associated introns of the skipped exons in the reference group, separated by semi-colons from the left to the right and the last one is the exclusive intron (e.g., <code>25;20;32;489</code>).</li> <li>alt_junction: Junction read counts of the associated introns of the skipped exons in the alternative group, separated by semi-colons from the left to the right and the last one is the exclusive intron (e.g., <code>386;438;703;598</code>).</li> <li>OR_junction: Odds ratio comparing junction read counts of the associated inclusive introns of the skipped exons to those of the exclusive intron, reference group against alternative group, separated by semi-colons from the left to the right (e.g., <code>0.07920361952594382;0.05584036006760605;0.055665610718888085</code>).</li> <li>p_juntion: P-value of Fisher's exact test for the junction read counts of the associated inclusive introns of the skipped exons to those of the exclusive intron, reference group against alternative group, separated by semi-colons from the left to the right (e.g., <code>3.0283773991245187e-54;2.488569122823104e-66;3.7054604961481054e-93</code>).</li> </ul>"},{"location":"output/shiba/#psi_afetxt-and-psi_aletxt","title":"<code>PSI_AFE.txt</code> and <code>PSI_ALE.txt</code>","text":"Alternative first and last exons <ul> <li>exon_a: Genomic coordinates of the distal exon.</li> <li>exon_b: Genomic coordinates of the proximal exon.</li> <li>intron_a: Genomic coordinates of the intron associated with the distal exon.</li> <li>intron_b: Genomic coordinates of the intron associated with the proximal exon.</li> <li>ref_junction_a: Junction read counts of the intron associated with the distal exon in the reference group.</li> <li>ref_junction_b: Junction read counts of the intron associated with the proximal exon in the reference group.</li> <li>alt_junction_a: Junction read counts of the intron associated with the distal exon in the alternative group.</li> <li>alt_junction_b: Junction read counts of the intron associated with the proximal exon in the alternative group.</li> <li>OR: Odds ratio comparing junction read counts of the intron associated with the distal exon to those of the intron associated with the proximal exon, reference group against alternative group.</li> <li>p: P-value of Fisher's exact test for the junction read counts of the intron associated with the distal exon to those of the intron associated with the proximal exon, reference group against alternative group.</li> </ul>"},{"location":"output/shiba/#when-ttest-is-true","title":"when <code>ttest</code> is <code>true</code>","text":"<ul> <li>&lt;sample&gt;_PSI: PSI of the sample. Blank cells indicate that the event did not pass the minimum read count threshold.</li> <li>p_ttest: P-value of Welch's t-test for the PSI of the reference and alternative groups. Please note that the P-value is not adjusted for multiple testing.</li> </ul>"},{"location":"output/shiba/#files-in-resultsexpression","title":"Files in <code>results/expression</code>","text":"<ul> <li><code>counts.txt</code>: Read counts for all samples.</li> <li><code>TPM.txt</code>: TPM values for all samples.</li> <li><code>CPM.txt</code>: CPM values for all samples.</li> <li><code>DEG.txt</code>: Results of differential expression analysis by DESeq2.</li> </ul>"},{"location":"output/shiba/#files-in-resultspca","title":"Files in <code>results/pca</code>","text":"<ul> <li><code>tpm_pca.tsv</code>: Principal components for TPM matrix.</li> <li><code>tpm_contribution.tsv</code>: Contribution to each principal component for TPM matrix.</li> <li><code>psi_pca.tsv</code>: Principal components for PSI matrix.</li> <li><code>psi_contribution.tsv</code>: Contribution to each principal component for PSI matrix.</li> </ul>"},{"location":"output/shiba/#an-example-of-output-directory-structure","title":"An example of output directory structure","text":"<pre><code>output\n\u251c\u2500\u2500 annotation\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 assembled_annotation.gtf\n\u251c\u2500\u2500 events\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_AFE.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_ALE.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_FIVE.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_MSE.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_MXE.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_RI.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 EVENT_SE.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 EVENT_THREE.txt\n\u251c\u2500\u2500 junctions\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 junctions.bed\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 logs\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 featureCounts.log\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 regtools.log\n\u251c\u2500\u2500 plots\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_AFE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_ALE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_FIVE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_MSE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_MXE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_RI.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_SE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bar_THREE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pca_PSI.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pca_TPM.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_AFE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_ALE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_FIVE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_MSE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_MXE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_RI.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_SE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 scatter_THREE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_AFE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_ALE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_FIVE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_MSE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_MXE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_RI.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 volcano_SE.html\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 volcano_THREE.html\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 summary.html\n\u2514\u2500\u2500 results\n \u00a0\u00a0 \u251c\u2500\u2500 expression\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 counts.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CPM.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 DEG.txt\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 logs\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 DESeq2.log\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 featureCounts.log\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 TPM_CPM.xlsx\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 TPM.txt\n \u00a0\u00a0 \u251c\u2500\u2500 pca\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 psi_contribution.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 psi_pca.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 tpm_contribution.tsv\n \u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 tpm_pca.tsv\n \u00a0\u00a0 \u2514\u2500\u2500 splicing\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_AFE.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_ALE.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_FIVE.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_matrix_group.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_matrix_sample.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_MSE.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_MXE.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_RI.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_SE.txt\n \u00a0\u00a0     \u251c\u2500\u2500 PSI_THREE.txt\n \u00a0\u00a0     \u2514\u2500\u2500 summary.txt\n</code></pre>"},{"location":"quickstart/diff_splicing_bulk/","title":"Differential RNA splicing analysis with bulk RNA-seq data","text":""},{"location":"quickstart/diff_splicing_bulk/#before-you-start","title":"Before you start","text":"<ul> <li>Perform mapping of RNA-seq reads to the reference genome and generate bam files with their index files (<code>.bai</code>)  by software such as STAR and HISAT2.<ul> <li>You can download test RNA-seq bam files with their index (two replicates for reference and alternative groups) mapped by STAR on the mouse genome from here.</li> </ul> </li> <li>Download a gene annotataion file of your interest in GTF format.</li> </ul>"},{"location":"quickstart/diff_splicing_bulk/#installation","title":"Installation","text":"<ul> <li>Shiba:</li> </ul> <pre><code># Install Shiba with conda\nconda create -n shiba -c conda-forge -c bioconda shiba\n# Activate the conda environment\nconda activate shiba\n# Install styleframe for generating outputs in Excel format (optional)\npip install styleframe==4.1\n</code></pre> <ul> <li>MameShiba, a lightweight version of Shiba:</li> </ul> <pre><code># Install MameShiba with conda\nconda create -n mameshiba -c conda-forge -c bioconda mameshiba\n# Activate the conda environment\nconda activate mameshiba\n</code></pre>"},{"location":"quickstart/diff_splicing_bulk/#shiba","title":"Shiba","text":""},{"location":"quickstart/diff_splicing_bulk/#1-prepare-inputs","title":"1. Prepare inputs","text":"<p><code>experiment.tsv</code>: A tab-separated text file of sample ID, path to bam files, and groups for differential analysis.</p> <pre><code>sample  bam group\nRef_1 /path/to/workdir/bam/Ref_1.bam  Ref\nRef_2 /path/to/workdir/bam/Ref_2.bam  Ref\nAlt_1 /path/to/workdir/bam/Alt_1.bam  Alt\nAlt_2 /path/to/workdir/bam/Alt_2.bam  Alt\n</code></pre> <p>Make sure to use tabs</p> <p>If you copy and paste the above example, your experiment.tsv file may contain spaces instead of tabs, which will causes an error when you run Shiba. Please make sure that you are using a tab character between the columns.</p> <p>Shiba supports long-read RNA-seq data</p> <p>If you have long-read RNA-seq data (i.e., PacBio or ONT), please add the 4th column to the <code>experiment.tsv</code> file with the value <code>long</code> for long-read data and <code>short</code> for short-read data. For example:</p> <pre><code>sample bam group technology\nRef_1 /path/to/workdir/bam/Ref_1.bam Ref short\nRef_2 /path/to/workdir/bam/Ref_2.bam Ref long\nAlt_1 /path/to/workdir/bam/Alt_1.bam Alt short\nAlt_2 /path/to/workdir/bam/Alt_2.bam Alt long\n</code></pre> <p>The 4th column is optional. If you do not have long-read data, you can omit the 4th column. Blank values are also accepted and will be treated as <code>short</code>.</p> <p>Use long-read data only for discovery of alternative RNA splicing events</p> <p>If you want to use long-read RNA-seq data only for discovery of alternative RNA splicing events and NOT for differential analysis, you can set the 3rd column to different values than that of short-read data. For example, if you want to perform differential splicing analysis between <code>Ref</code> and <code>Alt</code> groups using short-read data, you can set <code>Ref</code> and <code>Alt</code> for short-read data, and set <code>Ref_long</code> and <code>Alt_long</code> for long-read data, so that the long-read data will be used only for transcript assembly and not for differential analysis.</p> <p><code>config.yaml</code>: A yaml file of the configuration.</p> <pre><code>workdir:\n  /path/to/workdir # (1)!\ngtf:\n  /path/to/Mus_musculus.GRCm38.102.gtf # (2)!\nexperiment_table:\n  /path/to/experiment.tsv # (3)!\nunannotated:\n  True # (4)!\n\n# Junction read filtering\nminimum_anchor_length:\n  6 # (5)!\nminimum_intron_length:\n  70 # (6)!\nmaximum_intron_length:\n  500000 # (7)!\nstrand:\n  XS # (8)!\n\n# PSI calculation\nonly_psi:\n  False # (9)!\nonly_psi_group:\n  False # (10)!\nfdr:\n  0.05 # (11)!\ndelta_psi:\n  0.1 # (12)!\nreference_group:\n  Ref # (13)!\nalternative_group:\n  Alt # (14)!\nminimum_reads:\n  10 # (15)!\nindividual_psi:\n  True # (16)!\nttest:\n  True # (17)!\nexcel:\n  False # (18)!\n</code></pre> <ol> <li>The path to the working directory. This is where the output files will be saved. Please make sure that you have write permission to this directory.</li> <li>The path to the gene annotation file in GTF format.</li> <li>The path to the <code>experiment.tsv</code> file.</li> <li>True if you want to include unannotated splicing events in the analysis. If False, only annotated events are considered.</li> <li>Junctions having a minimum overlap of this much on both ends are reported.</li> <li>Minimum length of the intron sequence.</li> <li>Maximum length of the intron sequence.</li> <li>Strand specificity of RNA library preparation, where the options XS, use XS tags provided by aligner; RF, first-strand; FR, second-strand.</li> <li>True if you want to skip the differential analysis and only calculate PSI values for each sample.</li> <li>True if you want to skip the differential analysis and only calculate PSI values for each group.</li> <li>Significance threshold for differential splicing analysis.</li> <li>Minimum difference in PSI values between groups to be considered significant.</li> <li>Reference group for differential splicing analysis.</li> <li>Alternative group for differential splicing analysis.</li> <li>Minimum number of reads required to calculate PSI values.</li> <li>True if you want to print PSI values for each sample in the output file.</li> <li>True if you want to perform t-test for differential splicing analysis.</li> <li>True if you want to generate a file of splicing analysis results in excel format.</li> </ol>"},{"location":"quickstart/diff_splicing_bulk/#2-run","title":"2. Run","text":"<pre><code>shiba.py -p 4 config.yaml\n</code></pre> <p>You are going to use 4 threads for parallelization. You can change the number of threads by changing the <code>-p</code> option.</p> <p>Did you encounter any problems?</p> <p>You can run Shiba with the <code>--verbose</code> option to see the debug log. This will help you to find the problem. <pre><code>shiba.py --verbose -p 4 config.yaml\n</code></pre> If you continue to encounter issues, please don't hesitate to open an issue on GitHub. The community and developers are here to help!</p>"},{"location":"quickstart/diff_splicing_bulk/#mameshiba","title":"MameShiba","text":"<p>MameShiba is a lightweight version of Shiba that can be run on a local machine without Docker or Singularity. It is designed for users who want to perform splicing analysis only and do not need the full functionality of Shiba.</p>"},{"location":"quickstart/diff_splicing_bulk/#1-prepare-inputs_1","title":"1. Prepare inputs","text":"<p><code>experiment.tsv</code>: A tab-separated text file of sample ID, path to bam files, and groups for differential analysis. This is the same as the input for Shiba.</p> <p><code>config.yaml</code>: A yaml file of the configuration. This is the same as the configuration for Shiba.</p>"},{"location":"quickstart/diff_splicing_bulk/#2-run_1","title":"2. Run","text":"<p>Make sure running with <code>--mame</code> option.</p> <pre><code>shiba.py --mame -p 4 config.yaml\n</code></pre>"},{"location":"quickstart/diff_splicing_bulk/#snakeshiba","title":"SnakeShiba","text":"<p>A snakemake-based workflow of Shiba. This is useful for running Shiba on a cluster. Snakemake automatically parallelizes the jobs and manages the dependencies between them.</p>"},{"location":"quickstart/diff_splicing_bulk/#1-prepare-inputs_2","title":"1. Prepare inputs","text":"<p><code>experiment.tsv</code>: A tab-separated text file of sample ID, path to fastq files, and groups for differential analysis. This is the same as the input for Shiba.</p> <p><code>config.yaml</code>: A yaml file of the configuration. This is the same as the configuration for Shiba but with the addition of the <code>container</code> field and without the <code>only_psi</code> and <code>only_psi_group</code> fields as they are not supported in SnakeShiba.</p> <pre><code>workdir:\n  /path/to/workdir # (1)!\ncontainer: # This field is required for SnakeShiba\n  docker://naotokubota/shiba:v0.6.3 # (2)!\ngtf:\n  /path/to/Mus_musculus.GRCm38.102.gtf # (3)!\nexperiment_table:\n  /path/to/experiment.tsv # (4)!\n\n# Junction read filtering\nminimum_anchor_length:\n  6 # (5)!\nminimum_intron_length:\n  70 # (6)!\nmaximum_intron_length:\n  500000 # (7)!\nstrand:\n  XS # (8)!\n\n# PSI calculation\nfdr:\n  0.05 # (9)!\ndelta_psi:\n  0.1 # (10)!\nreference_group:\n  Ref # (11)!\nalternative_group:\n  Alt # (12)!\nminimum_reads:\n  10 # (13)!\nindividual_psi:\n  True # (14)!\nttest:\n  True # (15)!\nexcel:\n  False # (16)!\n</code></pre> <ol> <li>The path to the working directory. This is where the output files will be saved. Please make sure that you have write permission to this directory.</li> <li>The Docker image of Shiba.</li> <li>The path to the gene annotation file in GTF format.</li> <li>The path to the <code>experiment.tsv</code> file.</li> <li>Junctions having a minimum overlap of this much on both ends are reported.</li> <li>Minimum length of the intron sequence.</li> <li>Maximum length of the intron sequence.</li> <li>Strand specificity of RNA library preparation, where the options XS, use XS tags provided by aligner; RF, first-strand; FR, second-strand.</li> <li>Significance threshold for differential splicing analysis.</li> <li>Minimum difference in PSI values between groups to be considered significant.</li> <li>Reference group for differential splicing analysis.</li> <li>Alternative group for differential splicing analysis.</li> <li>Minimum number of reads required to calculate PSI values.</li> <li>True if you want to print PSI values for each sample in the output file.</li> <li>True if you want to perform t-test for differential splicing analysis.</li> <li>True if you want to generate a file of splicing analysis results in excel format.</li> </ol>"},{"location":"quickstart/diff_splicing_bulk/#2-run_2","title":"2. Run","text":"<p>Please make sure that you have installed Snakemake and Singularity and cloned the Shiba repository on your system.</p> <pre><code>snakemake -s /path/to/Shiba/snakeshiba.smk \\\n--configfile config.yaml \\\n--cores 16 \\\n--use-singularity \\\n--rerun-incomplete\n</code></pre>"},{"location":"quickstart/diff_splicing_sc/","title":"Differential RNA splicing analysis with single-cell/nucleus RNA-seq data","text":""},{"location":"quickstart/diff_splicing_sc/#before-you-start","title":"Before you start","text":"<ul> <li>Perform mapping of sc(sn)RNA-seq reads to the reference genome using STARsolo.<ul> <li>You can download a test input file mapped by STARsolo on the mouse genome from here.</li> </ul> </li> <li>Download a gene annotataion file of your interest in GTF format.</li> </ul>"},{"location":"quickstart/diff_splicing_sc/#installation","title":"Installation","text":"<pre><code># Install Shiba with conda\nconda create -n shiba -c conda-forge -c bioconda shiba\n# Activate the conda environment\nconda activate shiba\n# Install styleframe for generating outputs in Excel format (optional)\npip install styleframe==4.1\n</code></pre>"},{"location":"quickstart/diff_splicing_sc/#scshiba","title":"scShiba","text":""},{"location":"quickstart/diff_splicing_sc/#1-prepare-inputs","title":"1. Prepare inputs","text":"<p><code>experiment.tsv</code>: A tab-separated text file of barcode file and STAR solo raw output directory.</p> <pre><code>barcode SJ\n/path/to/barcodes_run1.tsv /path/to/run1/Solo.out/SJ/raw\n/path/to/barcodes_run2.tsv /path/to/run2/Solo.out/SJ/raw\n/path/to/barcodes_run3.tsv /path/to/run3/Solo.out/SJ/raw\n/path/to/barcodes_run4.tsv /path/to/run4/Solo.out/SJ/raw\n</code></pre> <p><code>barcodes.tsv</code> is a tab-separated text file of barcode and group name like this:</p> <pre><code>barcode group\nTTTGTTGTCCACACCT Cluster-1\nTCAAGACCACTACAGT Cluster-1\nTATTTCGGTACAGTAA Cluster-1\nATCCTATGTTAATCGC Cluster-1\nATCGATGAGTTTCTTC Cluster-2\nATCGATGGTCTTGCTC Cluster-2\nTATGTTCGTCAGGCAA Cluster-2\nATCGCCTAGACTCGAG Cluster-2\n...\n</code></pre> <p>Make sure to use tabs</p> <p>If you copy and paste the above example, your experiment.tsv file may contain spaces instead of tabs, which will causes an error when you run scShiba. Please make sure that you are using a tab character between the columns.</p> <p><code>config.yaml</code>: A yaml file of the configuration.</p> <pre><code>workdir:\n  /path/to/workdir # (1)!\ngtf:\n  /path/to/Mus_musculus.GRCm38.102.gtf # (2)!\nexperiment_table:\n  /path/to/experiment.tsv # (3)!\n\n# PSI calculation\nonly_psi:\n  False # (4)!\nfdr:\n  0.05 # (5)!\ndelta_psi:\n  0.1 # (6)!\nreference_group:\n  Cluster-1 # (7)!\nalternative_group:\n  Cluster-2 # (8)!\nminimum_reads:\n  10 # (9)!\nexcel:\n  False # (10)!\n</code></pre> <ol> <li>The working directory where the output files will be saved. Please make sure that you have write permission to this directory.</li> <li>The path to the gene annotation file in GTF format.</li> <li>The path to the <code>experiment.tsv</code> file.</li> <li>Set to <code>True</code> if you want to skip the differential analysis and only calculate PSI values for each sample.</li> <li>Significance threshold for differential splicing analysis.</li> <li>Minimum difference in PSI values between groups to be considered significant.</li> <li>Reference group for differential splicing analysis.</li> <li>Alternative group for differential splicing analysis.</li> <li>Minimum number of reads required to calculate PSI values.</li> <li>Set to <code>True</code> if you want to generate a file of splicing analysis results in excel format.</li> </ol>"},{"location":"quickstart/diff_splicing_sc/#2-run","title":"2. Run","text":"<pre><code>scshiba.py -p 4 config.yaml\n</code></pre> <p>You are going to use 4 threads for parallelization. You can change the number of threads by changing the <code>-p</code> option.</p> <p>Did you encounter any problems?</p> <p>You can run scShiba with the <code>--verbose</code> option to see the debug log. This will help you to find the problem. <pre><code>scshiba.py --verbose -p 4 config.yaml\n</code></pre> If you continue to encounter issues, please don't hesitate to open an issue on GitHub. The community and developers are here to help!</p>"},{"location":"quickstart/diff_splicing_sc/#snakescshiba","title":"SnakeScShiba","text":"<p>A snakemake-based workflow of scShiba. This is useful for running scShiba on a cluster. Snakemake automatically parallelizes the jobs and manages the dependencies between them.</p>"},{"location":"quickstart/diff_splicing_sc/#1-prepare-inputs_1","title":"1. Prepare inputs","text":"<p><code>experiment.tsv</code>: A tab-separated text file of sample ID, path to fastq files, and groups for differential analysis. This is the same as the input for scShiba.</p> <p><code>config.yaml</code>: A yaml file of the configuration. This is the same as the input for scShiba but with the addition of the <code>container</code> field.</p> <pre><code>workdir:\n  /path/to/workdir # (1)!\ncontainer: # This field is required for SnakeScShiba\n  docker://naotokubota/shiba:v0.6.3 # (2)!\ngtf:\n  /path/to/Mus_musculus.GRCm38.102.gtf # (3)!\nexperiment_table:\n  /path/to/experiment.tsv # (4)!\n\n# PSI calculation\nonly_psi:\n  False # (5)!\nfdr:\n  0.05 # (6)!\ndelta_psi:\n  0.1 # (7)!\nreference_group:\n  Cluster-1 # (8)!\nalternative_group:\n  Cluster-2 # (9)!\nminimum_reads:\n  10 # (10)!\nexcel:\n  False # (11)!\n</code></pre> <ol> <li>The working directory where the output files will be saved. Please make sure that you have write permission to this directory.</li> <li>The Docker image of Shiba.</li> <li>The path to the gene annotation file in GTF format.</li> <li>The path to the <code>experiment.tsv</code> file.</li> <li>Set to <code>True</code> if you want to skip the differential analysis and only calculate PSI values for each sample.</li> <li>Significance threshold for differential splicing analysis.</li> <li>Minimum difference in PSI values between groups to be considered significant.</li> <li>Reference group for differential splicing analysis.</li> <li>Alternative group for differential splicing analysis.</li> <li>Minimum number of reads required to calculate PSI values.</li> <li>Set to <code>True</code> if you want to generate a file of splicing analysis results in excel format.</li> </ol>"},{"location":"quickstart/diff_splicing_sc/#2-run_1","title":"2. Run","text":"<p>Please make sure that you have installed Snakemake and Singularity and cloned the Shiba repository on your system.</p> <pre><code>snakemake -s /path/to/Shiba/snakescshiba.smk \\\n--configfile config.yaml \\\n--cores 16 \\\n--use-singularity \\\n--rerun-incomplete\n</code></pre>"},{"location":"usage/scshiba/","title":"scShiba usage","text":"<pre><code>usage: scshiba.py [-h] [-p PROCESS] [-s START_STEP] [-v] config\n\nscShiba v0.6.3 - Pipeline for identification of differential RNA splicing in single-cell RNA-seq data\n\nStep 1: gtf2event.py\n    - Converts GTF files to event format.\nStep 2: sc2junc.py\n    - Counts junction reads from STARsolo output files.\nStep 3: scpsi.py\n    - Calculates PSI values and perform differential analysis.\n\npositional arguments:\n  config                Config file in yaml format\n\noptions:\n  -h, --help            show this help message and exit\n  -p PROCESS, --process PROCESS\n                        Number of processors to use (default: 1)\n  -s START_STEP, --start-step START_STEP\n                        Start the pipeline from the specified step (default: 0, run all steps)\n  -v, --verbose         Verbose mode\n</code></pre> <p>Please check the Manual to learn how to prepare the <code>config.yaml</code>.</p> <p>The above command will run the following steps:</p> <ol> <li><code>gtf2event.py</code></li> <li><code>sc2junc.py</code></li> <li><code>scpsi.py</code></li> </ol>"},{"location":"usage/scshiba/#step1-gtf2eventpy","title":"Step1: <code>gtf2event.py</code>","text":"<pre><code>usage: gtf2event.py [-h] -i GTF [-r REFERENCE_GTF] -o OUTPUT [-p NUM_PROCESS] [-v]\n\nExtract alternative splicing events from GTF file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i GTF, --gtf GTF     Input GTF file\n  -r REFERENCE_GTF, --reference-gtf REFERENCE_GTF\n                        Reference GTF file\n  -o OUTPUT, --output OUTPUT\n                        Output directory\n  -p NUM_PROCESS, --num-process NUM_PROCESS\n                        Number of processors to use\n  -v, --verbose         Verbose output\n</code></pre> <p>Example of <code>EVENT_SE.txt</code>:</p> <pre><code>event_id  pos_id  exon  intron_a  intron_b  intron_c  strand  gene_id  gene_name  label\nSE_1  SE@GL456354.1@84521-85111@83560-85765  GL456354.1:84521-85111  GL456354.1:83560-84521  GL456354.1:85111-85765  GL456354.1:83560-85765  -  ENSMUSG00000094337  Gm3286  annotated\nSE_2  SE@chr10@100080857-100080940@100080130-100087347  chr10:100080857-100080940  chr10:100080130-100080857  chr10:100080940-100087347  chr10:100080130-100087347  +  ENSMUSG00000019966  Kitl  annotated\nSE_3  SE@chr10@100485051-100485125@100478022-100487162  chr10:100485051-100485125  chr10:100478022-100485051  chr10:100485125-100487162  chr10:100478022-100487162  -  ENSMUSG00000036676  Tmtc3  annotated\nSE_4  SE@chr10@100485051-100485185@100478022-100487162  chr10:100485051-100485185  chr10:100478022-100485051  chr10:100485185-100487162  chr10:100478022-100487162  -  ENSMUSG00000036676  Tmtc3  annotated\nSE_5  SE@chr10@100495641-100495661@100494954-100495823  chr10:100495641-100495661  chr10:100494954-100495641  chr10:100495661-100495823  chr10:100494954-100495823  +  ENSMUSG00000019971  Cep290  annotated\nSE_6  SE@chr10@100578315-100578431@100577358-100583914  chr10:100578315-100578431  chr10:100577358-100578315  chr10:100578431-100583914  chr10:100577358-100583914  -  ENSMUSG00000046567  4930430F08Rik  annotated\nSE_7  SE@chr10@100582263-100582322@100578431-100583914  chr10:100582263-100582322  chr10:100578431-100582263  chr10:100582322-100583914  chr10:100578431-100583914  -  ENSMUSG00000046567  4930430F08Rik  annotated\nSE_8  SE@chr10@100594537-100594656@100592429-100595035  chr10:100594537-100594656  chr10:100592429-100594537  chr10:100594656-100595035  chr10:100592429-100595035  +  ENSMUSG00000056912  1700017N19Rik  annotated\nSE_9  SE@chr10@100610596-100610715@100609254-100612429  chr10:100610596-100610715  chr10:100609254-100610596  chr10:100610715-100612429  chr10:100609254-100612429  +  ENSMUSG00000056912  1700017N19Rik  annotated\n...\n</code></pre>"},{"location":"usage/scshiba/#step2-sc2juncpy","title":"Step2: <code>sc2junc.py</code>","text":"<pre><code>usage: sc2junc.py [-h] -i EXPERIMENT -o OUT [-v]\n\nThis script takes STARsolo SJ files and outputs junction read counts\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i EXPERIMENT, --experiment EXPERIMENT\n                        Experiment table (default: None)\n  -o OUT, --out OUT     Output junction file (default: None)\n  -v, --verbose         Verbose mode (default: False)\n</code></pre>"},{"location":"usage/scshiba/#step3-scpsipy","title":"Step3: <code>scpsi.py</code>","text":"<pre><code>usage: scpsi.py [-h] [-p NUM_PROCESS] [-f FDR] [-d PSI] [-r REFERENCE] [-a ALTERNATIVE] [-m MINIMUM_READS] [--onlypsi] [--excel] [-v] junctions event output\n\nPSI calculation for alternative splicing events in scRNA-seq data\n\npositional arguments:\n  junctions             A bed file of Junction read counts generated by bam2junc.sh\n  event                 Directory that contains text files of alternative splicing events generated by gtf2event.py\n  output                Directory for output files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p NUM_PROCESS, --num-process NUM_PROCESS\n                        Number of processors to use (default: 1)\n  -f FDR, --fdr FDR     FDR for detecting differential events (default: 0.05)\n  -d PSI, --psi PSI     Threshold of delta PSI for detecting differential events (default: 0.1)\n  -r REFERENCE, --reference REFERENCE\n                        Reference group for detecting differential events (default: None)\n  -a ALTERNATIVE, --alternative ALTERNATIVE\n                        Alternative group for detecting differential events (default: None)\n  -m MINIMUM_READS, --minimum-reads MINIMUM_READS\n                        Minumum value of total reads for each junction for detecting differential events (default: 10)\n  --onlypsi             Just calculate PSI for each sample, not perform statistical tests (default: False)\n  --excel               Make result files in excel format (default: False)\n  -v, --verbose         Verbose output (default: False)\n</code></pre>"},{"location":"usage/shiba/","title":"Shiba usage","text":"<pre><code>usage: shiba.py [-h] [-p PROCESS] [-s START_STEP] [--mame] [-v] config\n\nShiba v0.6.3 - Pipeline for identification of differential RNA splicing\n\nStep 1: bam2gtf.py\n    - Assembles transcript structures based on mapped reads using StringTie2.\nStep 2: gtf2event.py\n    - Converts GTF files to event format.\nStep 3: bam2junc.py\n    - Extracts junction reads from BAM files.\nStep 4: psi.py\n    - Calculates PSI values and performs differential analysis.\nStep 5: expression.py\n    - Analyzes gene expression.\nStep 6: pca.py\n    - Performs PCA.\nStep 7: plots.py\n    - Generates plots from results.\n\npositional arguments:\n  config                Config file in yaml format\n\noptions:\n  -h, --help            show this help message and exit\n  -p PROCESS, --process PROCESS\n                        Number of processors to use (default: 1)\n  -s START_STEP, --start-step START_STEP\n                        Start the pipeline from the specified step (default: 0, run all steps)\n  --mame                Execute MameShiba, a lightweight version of Shiba, for only splicing analysis. Steps 5-7 will be skipped.\n  -v, --verbose         Verbose mode\n</code></pre> <p>Check the Manual to learn how to prepare the <code>config</code>.</p> <p>The <code>Shiba</code> command will run the following steps sequentially:</p> <ol> <li><code>bam2gtf.py</code></li> <li><code>gtf2event.py</code></li> <li><code>bam2junc.py</code></li> <li><code>psi.py</code></li> <li><code>expression.py</code></li> <li><code>pca.py</code></li> <li><code>plots.py</code></li> </ol>"},{"location":"usage/shiba/#step1-bam2gtfpy","title":"Step1: <code>bam2gtf.py</code>","text":"<pre><code>usage: bam2gtf.py [-h] -i INPUT -r REFERENCE -o OUTPUT [-p PROCESSORS] [-v]\n\nPipeline for transcript assembly using StringTie2\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Experiment table\n  -r REFERENCE, --reference REFERENCE\n                        Reference GTF file\n  -o OUTPUT, --output OUTPUT\n                        Assembled GTF file\n  -p PROCESSORS, --processors PROCESSORS\n                        Number of processors to use (default: 1)\n  -v, --verbose         Verbose output\n</code></pre>"},{"location":"usage/shiba/#step2-gtf2eventpy","title":"Step2: <code>gtf2event.py</code>","text":"<pre><code>usage: gtf2event.py [-h] -i GTF [-r REFERENCE_GTF] -o OUTPUT [-p NUM_PROCESS] [-v]\n\nExtract alternative splicing events from GTF file\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i GTF, --gtf GTF     Input GTF file\n  -r REFERENCE_GTF, --reference-gtf REFERENCE_GTF\n                        Reference GTF file\n  -o OUTPUT, --output OUTPUT\n                        Output directory\n  -p NUM_PROCESS, --num-process NUM_PROCESS\n                        Number of processors to use\n  -v, --verbose         Verbose output\n</code></pre> <p>Example of <code>EVENT_SE.txt</code>:</p> <pre><code>event_id  pos_id  exon  intron_a  intron_b  intron_c  strand  gene_id  gene_name  label\nSE_1  SE@GL456354.1@84521-85111@83560-85765  GL456354.1:84521-85111  GL456354.1:83560-84521  GL456354.1:85111-85765  GL456354.1:83560-85765  -  ENSMUSG00000094337  Gm3286  annotated\nSE_2  SE@chr10@100080857-100080940@100080130-100087347  chr10:100080857-100080940  chr10:100080130-100080857  chr10:100080940-100087347  chr10:100080130-100087347  +  ENSMUSG00000019966  Kitl  annotated\nSE_3  SE@chr10@100485051-100485125@100478022-100487162  chr10:100485051-100485125  chr10:100478022-100485051  chr10:100485125-100487162  chr10:100478022-100487162  -  ENSMUSG00000036676  Tmtc3  annotated\nSE_4  SE@chr10@100485051-100485185@100478022-100487162  chr10:100485051-100485185  chr10:100478022-100485051  chr10:100485185-100487162  chr10:100478022-100487162  -  ENSMUSG00000036676  Tmtc3  annotated\nSE_5  SE@chr10@100495641-100495661@100494954-100495823  chr10:100495641-100495661  chr10:100494954-100495641  chr10:100495661-100495823  chr10:100494954-100495823  +  ENSMUSG00000019971  Cep290  annotated\nSE_6  SE@chr10@100578315-100578431@100577358-100583914  chr10:100578315-100578431  chr10:100577358-100578315  chr10:100578431-100583914  chr10:100577358-100583914  -  ENSMUSG00000046567  4930430F08Rik  annotated\nSE_7  SE@chr10@100582263-100582322@100578431-100583914  chr10:100582263-100582322  chr10:100578431-100582263  chr10:100582322-100583914  chr10:100578431-100583914  -  ENSMUSG00000046567  4930430F08Rik  annotated\nSE_8  SE@chr10@100594537-100594656@100592429-100595035  chr10:100594537-100594656  chr10:100592429-100594537  chr10:100594656-100595035  chr10:100592429-100595035  +  ENSMUSG00000056912  1700017N19Rik  annotated\nSE_9  SE@chr10@100610596-100610715@100609254-100612429  chr10:100610596-100610715  chr10:100609254-100610596  chr10:100610715-100612429  chr10:100609254-100612429  +  ENSMUSG00000056912  1700017N19Rik  annotated\n...\n</code></pre>"},{"location":"usage/shiba/#step3-bam2juncpy","title":"Step3: <code>bam2junc.py</code>","text":"<pre><code>usage: bam2junc.py [-h] -i INPUT -r RI_EVENT -o OUTPUT [-p PROCESSORS] [-a ANCHOR] [-m MIN_INTRON] [-M MAX_INTRON] [-s STRAND] [-v]\n\nPipeline for processing junction read counts.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Experiment table\n  -r RI_EVENT, --ri_event RI_EVENT\n                        Intron retention event file\n  -o OUTPUT, --output OUTPUT\n                        Output junction read counts file\n  -p PROCESSORS, --processors PROCESSORS\n                        Number of processors to use (default: 1)\n  -a ANCHOR, --anchor ANCHOR\n                        Minimum anchor length (default: 8)\n  -m MIN_INTRON, --min_intron MIN_INTRON\n                        Minimum intron size (default: 70)\n  -M MAX_INTRON, --max_intron MAX_INTRON\n                        Maximum intron size (default: 500000)\n  -s STRAND, --strand STRAND\n                        Strand specificity (default: XS)\n  -v, --verbose         Verbose output\n</code></pre>"},{"location":"usage/shiba/#step4-psipy","title":"Step4: <code>psi.py</code>","text":"<pre><code>usage: psi.py [-h] [-p NUM_PROCESS] [-g GROUP] [-f FDR] [-d PSI] [-r REFERENCE] [-a ALTERNATIVE] [-m MINIMUM_READS] [-i] [-t] [--onlypsi] [--onlypsi-group] [--excel] [-v] junctions event output\n\nPSI calculation for alternative splicing events\n\npositional arguments:\n  junctions             A bed file of Junction read counts generated by bam2junc.sh\n  event                 Directory that contains text files of alternative splicing events generated by gtf2event.py\n  output                Directory for output files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p NUM_PROCESS, --num-process NUM_PROCESS\n                        Number of processors to use (default: 1)\n  -g GROUP, --group GROUP\n                        Group information for detecting differential events (default: None)\n  -f FDR, --fdr FDR     FDR for detecting differential events (default: 0.05)\n  -d PSI, --psi PSI     Threshold of delta PSI for detecting differential events (default: 0.1)\n  -r REFERENCE, --reference REFERENCE\n                        Reference group for detecting differential events (default: None)\n  -a ALTERNATIVE, --alternative ALTERNATIVE\n                        Alternative group for detecting differential events (default: None)\n  -m MINIMUM_READS, --minimum-reads MINIMUM_READS\n                        Minumum value of total reads for each junction for detecting differential events (default: 10)\n  -i, --individual-psi  Print PSI for individual samples to output files (default: False)\n  -t, --ttest           Perform Welch's t-test between reference and alternative group (default: False)\n  --onlypsi             Just calculate PSI for each sample, not perform statistical tests (default: False)\n  --onlypsi-group       Just calculate PSI for each group, not perform statistical tests (Overrides --onlypsi when used together) (default: False)\n  --excel               Make result files in excel format (default: False)\n  -v, --verbose         Verbose output (default: False)\n</code></pre>"},{"location":"usage/shiba/#step5-expressionpy","title":"Step5: <code>expression.py</code>","text":"<pre><code>usage: expression.py [-h] -i INPUT -g REFERENCE -o OUTPUT [-r REFGROUP] [-a ALTGROUP] [-p PROCESSORS] [-v]\n\nRNA expression analysis using featureCounts and DESeq2.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Experiment table\n  -g REFERENCE, --reference REFERENCE\n                        Reference GTF file\n  -o OUTPUT, --output OUTPUT\n                        Output directory\n  -r REFGROUP, --refgroup REFGROUP\n                        Reference group for differential expression analysis\n  -a ALTGROUP, --altgroup ALTGROUP\n                        Alternative group for differential expression analysis\n  -p PROCESSORS, --processors PROCESSORS\n                        Number of processors to use (default: 1)\n  -v, --verbose         Increase output verbosity\n</code></pre>"},{"location":"usage/shiba/#step6-pcapy","title":"Step6: <code>pca.py</code>","text":"<pre><code>usage: pca.py [-h] [--input-tpm INPUT_TPM] [--input-psi INPUT_PSI] [-g GENES] [-o OUTPUT] [-v]\n\nPrincipal Component Analysis for matrix of gene expression and splicing\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --input-tpm INPUT_TPM\n                        Input TPM file (default: None)\n  --input-psi INPUT_PSI\n                        Input PSI file (default: None)\n  -g GENES, --genes GENES\n                        Number of highly-variable genes or splicing events to calculate PCs (default: 3000)\n  -o OUTPUT, --output OUTPUT\n                        Output directory (default: None)\n  -v, --verbose         Verbose output (default: False)\n</code></pre>"},{"location":"usage/shiba/#step7-plotspy","title":"Step7: <code>plots.py</code>","text":"<pre><code>usage: plots.py [-h] [-i INPUT] [-e EXPERIMENT_TABLE] [-s SHIBA_COMMAND] [-o OUTPUT] [-v]\n\nMake plots for alternative splicing events\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Directory that contains result files (default: None)\n  -e EXPERIMENT_TABLE, --experiment-table EXPERIMENT_TABLE\n                        Experiment table file (default: None)\n  -s SHIBA_COMMAND, --shiba-command SHIBA_COMMAND\n                        Shiba command (default: None)\n  -o OUTPUT, --output OUTPUT\n                        Directory for output files (default: None)\n  -v, --verbose         Verbose output (default: False)\n</code></pre>"},{"location":"usage/snakescshiba/","title":"SnakeScShiba Usage","text":"<p>This snakescshiba.smk script is written for use with Snakemake, a workflow management system that allows for the creation of reproducible and scalable data analyses. Snakemake uses a Python-based domain-specific language to define rules that specify how to generate output files from input files. These rules are executed in a directed acyclic graph (DAG) to ensure efficient and correct execution.</p> <p>Key Features of Snakemake:</p> <ul> <li>Automatically determines the order of execution based on dependencies.</li> <li>Supports parallel execution on local machines, clusters, and cloud environments.</li> <li>Provides built-in support for logging, benchmarking, and resource management.</li> </ul> <p>Tip</p> <p>For more information about Snakemake, visit:</p> <ul> <li>Official Documentation: https://snakemake.readthedocs.io/</li> <li>GitHub Repository: https://github.com/snakemake/snakemake</li> <li>Tutorials and Examples: https://snakemake.readthedocs.io/en/stable/tutorial/tutorial.html</li> </ul> <p>You can run the script using the following command:</p> <pre><code>snakemake -s snakescshiba.smk \\\n--configfile config.yaml \\\n--cores 4 \\\n--use-singularity \\\n--singularity-args \"--bind $HOME:$HOME\" \\\n--rerun-incomplete\n</code></pre> <p>Please check the Quick Start to learn how to prepare the <code>config.yaml</code>.</p> SnakeScShiba rulegraph <p>This rulegraph was made by snakevision.</p>"},{"location":"usage/snakeshiba/","title":"SnakeShiba Usage","text":"<p>This snakeshiba.smk script is written for use with Snakemake, a workflow management system that allows for the creation of reproducible and scalable data analyses. Snakemake uses a Python-based domain-specific language to define rules that specify how to generate output files from input files. These rules are executed in a directed acyclic graph (DAG) to ensure efficient and correct execution.</p> <p>Key Features of Snakemake:</p> <ul> <li>Automatically determines the order of execution based on dependencies.</li> <li>Supports parallel execution on local machines, clusters, and cloud environments.</li> <li>Provides built-in support for logging, benchmarking, and resource management.</li> </ul> <p>Tip</p> <p>For more information about Snakemake, visit:</p> <ul> <li>Official Documentation: https://snakemake.readthedocs.io/</li> <li>GitHub Repository: https://github.com/snakemake/snakemake</li> <li>Tutorials and Examples: https://snakemake.readthedocs.io/en/stable/tutorial/tutorial.html</li> </ul> <p>You can run the script using the following command:</p> <pre><code>snakemake -s snakeshiba.smk \\\n--configfile config.yaml \\\n--cores 4 \\\n--use-singularity \\\n--singularity-args \"--bind $HOME:$HOME\" \\\n--rerun-incomplete\n</code></pre> <p>Please check the Quick Start to learn how to prepare the <code>config.yaml</code>.</p> SnakeShiba rulegraph <p>This rulegraph was made by snakevision.</p>"}]}